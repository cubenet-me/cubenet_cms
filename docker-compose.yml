services:
  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - cubenet_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 15
      start_period: 10s

  api:
    build: .
    container_name: cubenet_api
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DEBUG: ${DEBUG}
    ports:
      - "8585:8585"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - cubenet_net

volumes:
  pgdata:

networks:
  cubenet_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16